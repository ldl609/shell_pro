

1.shell中的特殊位置参数变量
常用的特殊位置参数变量说明
------------------------------------------------------------
  位置变量						作用说明
------------------------------------------------------------
	$0				获取当前执行的shell脚本的文件名,如果执
					行脚本包含了路径,那么就包括脚本路径
------------------------------------------------------------
	$n				获取当前执行的shell脚本的n个参数值,n=1..9
					当n=0时表示脚本的文件名;如果大于9则用
					大括号括起来,例如${12},接的参数以空格隔开
------------------------------------------------------------
	$#				获取当前执行的shell脚本后面接的参数的总个数
------------------------------------------------------------
	$*				获取当前shell脚本所有传参的参数,不加引号和$@相同如果给$*加上双引号
					例如:"$*"则表示将所有的参数视为单个字符串相当于"$1$2$3"
------------------------------------------------------------
	$@				获取当前shell脚本所有传参的参数,不加引号和$*相同;如果给$@加上双引号
					例如:"$@",则表示将所有的参数视为不同的独立字符串,相当于"$1""$2""$3""$4""..."
					这是将多参数传递给其他程序的最佳方式,因为它会保留所有的内嵌在每个参数里的任何空白
					.当"$@"和"$*"都加双引号时,两者是有区别的;都不加双引号时,两者无区别
------------------------------------------------------------


2.shell进程中的特殊状态变量
-shell进程中的特殊状态变量说明
--------------------------------------------------------------------------------------------
	位置变量						作用说明
--------------------------------------------------------------------------------------------
	$?					获取执行上一个指令的状态返回值(0为成功,非0为失败),这个变量经常使用
--------------------------------------------------------------------------------------------
	$$					获取当前执行shell脚本的进程号(PID),不常用了解即可
--------------------------------------------------------------------------------------------
	$!					获取上一个在后台工作的进程的进程号(PID),不常用了解即可
--------------------------------------------------------------------------------------------
	$_					获取在此之前执行的命令或脚本的最后一个参数,不常用了解即可
--------------------------------------------------------------------------------------------

-$?应用场景
 <1>判断命令,脚本或函数程序是否执行成功
 <2>若在脚本中调用执行"exit数字",则会返回这个数字给"$?"变量
 <3>如果是在函数里,通过"return数字"把这个数字以函数返回值的形式传给"$?"
 





























