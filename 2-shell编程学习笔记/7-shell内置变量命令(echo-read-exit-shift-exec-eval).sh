#!/bin/bash
echo-read-exit-shift-exec-eval

# 1.echo在屏幕上输出信息
# -echo参数信息说明
# -----------------------------------------------------------
#	参数选项					说明
# -----------------------------------------------------------
#	-n						不换行输出
# -----------------------------------------------------------
#	-e						解析转义字符(常使用)
# -----------------------------------------------------------

# -转义字符说明表
# -----------------------------------------------------------
#	\n						换行
# -----------------------------------------------------------
#	\r						回车
# -----------------------------------------------------------
#	\t						制表符(Tab)
# -----------------------------------------------------------
#	\b						退格
# -----------------------------------------------------------
#	\v						纵向制表符
# -----------------------------------------------------------

# 示例不换行输出
echo oldboy;echo oldgirl
echo -n oldboy;echo oldgirl

# 示例解析转义字符(主要'\b'输出时会覆盖掉前一字符)
echo "oldboy\toldgirl\noldboy\toldgirl"
echo -e "oldboy\toldgirl\noldboy\toldgirl\boldboy"


# 2.eval指令
# -当shell程序执行到eval语句时,shell读入参数args
#  并将它们组合成一个新的命令然后执行

# 示例(需要传入参数)
eval "echo \$$#"


# 3.exec指令
# -能够在不创建新的子进程的前提下转去执行指定的命令
#  当指定的命令执行完毕后该进程就终止了


# 4.read
# -从标准输入读取字符串等信息传给shell程序内部定义的变量

# 示例


# 5.shift
# -在程序中每使用一次shift语句,都会使所有位置参数一次向左移动一个位置
# 使位置参数$#减1直到减到0为止

# 示例
echo  $1 $2 
if [ $# -eq 2];then
	shift
	echo $1
fi

# 6.exit
# -退出shell程序,在exit之后可以有选地指定一个数字作为返回状态
# 示例



