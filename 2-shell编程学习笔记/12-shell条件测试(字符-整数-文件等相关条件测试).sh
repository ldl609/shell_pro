#!/bin/bash

:<<eof
 						1.Shell脚本条件测试的几种方式
 -------------------------------------------------------------------------------------------
 	条件测试语法								说明
 -------------------------------------------------------------------------------------------
  test 测试表达式			这是利用test命令进行条件测试表达式的方法
						test命令与表达式之间必须至少一个空格,不能使用&&,||,>,<等操作符可
 -------------------------------------------------------------------------------------------
  [ 测试表达式 ]			[]的边界和内容之间至少要有一个空格(推荐使用方法),用[]测试变量时,必须加双引号,
						不能使用&&,||,>,<等操作符可			
 -------------------------------------------------------------------------------------------
  [[ 测试表达式 ]] 		比test和[]更新的格式,[[]]边界和内容之间至少要有一个空格
						可以使用通配符等进行模式匹配	
						不能使用-a,-o,-gt,-lt等操作符				
 -------------------------------------------------------------------------------------------
  (( 测试表达式 ))		常用于计算,一般用于if语句里
 -------------------------------------------------------------------------------------------
 

			2.整数二元比较操作符简介在条件测试中的使用方法(按照下表使用不不会出现逻辑错误)			
 -------------------------------------------------------------------------------------------
	条件测试	| 整数二元比	|		整数二元比较操作符		|		示例
	 方法	|  较操作符	|			的含义				|
 -----------|-----------|-------------------------------|-------------------------------------
			|	-eq		| 相等,全拼为equal				| test $i -eq $j && echo true || echo false 
			|			|								| [ $i -eq $j ] && echo true || echo false 
			|-----------|-------------------------------|-------------------------------------
			|	-ne		| 不相等,全拼为not equal			| test $i -ne $j && echo true || echo false 
			|			|								| [ $i -ne $j ] && echo true || echo false 
			|-----------|-------------------------------|-------------------------------------
			|	-gt		| 大于,全拼为greater than		| test $i -gt $j && echo true || echo false 
			|			|								| [ $i -gte $j ] && echo true || echo false 
  test与[]	|-----------|-------------------------------|-------------------------------------
			|	-ge		| 大于等于,全拼为greater equal	| test $i -ge $j && echo true || echo false 
			|			|								| [ $i -ge $j ] && echo true || echo false 
			|-----------|-------------------------------|-------------------------------------
			|	-lt		| 小于,全拼为less than			| test $i -lt $j && echo true || echo false 
			|			|								| [ $i -lt $j ] && echo true || echo false 
			|-----------|-------------------------------|-------------------------------------
			|	-le		| 小于等于,全拼为less equal		| test $i -le $j && echo true || echo false 
			|			|								| [ $i -le $j ] && echo true || echo false 
 -----------------------|-------------------------------|-------------------------------------
 -----------------------|-------------------------------|---------------------------------------
 			|	==或=	| 相等							| (($i==$j)) && echo true || echo false 
 			|			|								| 
			|-----------|-------------------------------|-------------------------------------
			|	!=		| 不相等							| ((5!=6)) && echo true || echo false 
			|			|								| 
			|-----------|-------------------------------|-------------------------------------
			|	>		| 大于							| ((5>6)) && echo true || echo false 
			|			|								| 
 (())与[[]]	|-----------|-------------------------------|-------------------------------------
			|	>=		| 大于等于						| ((5>=6)) && echo true || echo false 
			|			|								| 
			|-----------|-------------------------------|-------------------------------------
			|	<		| 小于							| ((5<6)) && echo true || echo false 
			|			|								| 
			|-----------|-------------------------------|-------------------------------------
			|	<=		| 小于等于						| ((5<=6)) && echo true || echo false 
			|			|								| 
 ------------------------------------------------------------------------------------------
 
				3.逻辑操作符简介以及在条件测试中的使用方法(按照下表使用不不会出现逻辑错误)
 -------------------------------------------------------------------------------------------------------------
 条件测试方法	| 逻辑操作符	|		逻辑操作符的含义			|		示例
			|  			|								|
 -----------|-----------|-------------------------------|-----------------------------------------------------
			|	-a		| and,两端都为真则结果为真			| test 5 -eq 9 -a 5 -ne 6  && echo true || echo false 
			|			|								| [ 9 -eq 9 -a 5 -eq 6 ] && echo true || echo false 
			|-----------|-------------------------------|-----------------------------------------------------
  test与[]	|	-o		| or,两端有一个为真则结果为真		| test 5 -eq 9 -o 5 -ne 6  && echo true || echo false 
			|			|								| [ 9 -eq 9 -o 5 -eq 6 ] && echo true || echo false
			|-----------|-------------------------------|-----------------------------------------------------
			|	!		| not,两端相反则结果为真			|
 -----------------------|-------------------------------|-----------------------------------------------------
 -----------------------|-------------------------------|-----------------------------------------------------
 			|	&&		| 两端都为真则结果为真				| ((5==6 && 6>9)) && echo true || echo false 
 			|			|								| [[ $i==9 && $j>12 ]] && echo true || echo false 
			|-----------|-------------------------------|-----------------------------------------------------
(())与[[]]	|	||		| 两端有一个为真则结果为真			| ((5==6 || 6>9)) && echo true || echo false 
			|			|								| [[ $i==9 || $j>12 ]] && echo true || echo false 
			|-----------|-------------------------------|-----------------------------------------------------
			|	!		| 两端相反则结果为真				| 
--------------------------------------------------------------------------------------------------------------
 
 

 判断字符串(字符串必须加引号)	 含义					示例
 -------------------------------------------------------------------------------------------------
  -n 字符串				字符串的长度非零		test  -n  $str  && echo true || echo false
											[ -n  $str ] && echo true || echo false
											[[ -n  $str ]] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  -z 字符串				字符串的长度为零		test  -z  $str  && echo true || echo false
											[ -z  $str ] && echo true || echo false
											[[ -z  $str ]] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  字符串1 = 字符串2		字符串相等			test "dsff" = "dsff" && echo true || echo false
						(=两端必须有空格)		[ "dsff" = "dsff" ] && echo true || echo false
											[[ "dsff" = "dsff" ]] && echo true || echo false
						
 -------------------------------------------------------------------------------------------------
  字符串1 != 字符串2		字符串不相等			test "dsff" != "dsff" && echo true || echo false
						(!=两端必须有空格)	[ "dsff" != "dsff" ] && echo true || echo false
											[[ "dsff" != "dsff" ]] && echo true || echo false
						
 -------------------------------------------------------------------------------------------------

	判断整数					含义					示例
 (最好使用test或[])								
 -------------------------------------------------------------------------------------------------
  整数1 -eq 整数2		整数1等于整数2		test $num1 -eq $num2  && echo true || echo false
											[ $num1 -eq $num2 ] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  整数1 -ge 整数2		整数1大于等于整数2	test $num1 -ge $num2  && echo true || echo false
											[ $num1 -ge $num2 ] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  整数1 -gt 整数2		整数1大于整数2		test $num1 -gt $num2  && echo true || echo false
											[ $num1 -gt $num2 ] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  整数1 -le 整数2		整数1小于等于整数2	test $num1 -le $num2  && echo true || echo false
											[ $num1 -le $num2 ] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  整数1 -lt 整数2		整数1小于整数2		test $num1 -lt $num2  && echo true || echo false
											[ $num1 -lt $num2 ] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  整数1 -ne 整数2		整数1不等于整数2		test $num1 -ne $num2  && echo true || echo false
											[ $num1 -ne $num2 ] && echo true || echo false
 -------------------------------------------------------------------------------------------------

 判断文件相关信息		含义										示例
 -------------------------------------------------------------------------------------------------
  fie1 -ef fie2	两个文件具有同样的设备			test file1 -ef file2  && echo true || echo false
				号和i节点号					[ file1 -ef file2 ] && echo true || echo false
											[[ file1 -ef file2 ]] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  fie1 -nt fie2	文件1比文件2新				test file1 -nt file2  && echo true || echo false
											[ file1 -nt file2 ] && echo true || echo false
											[[ file1 -nt file2 ]] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  fie1 -ot fie2	文件1比文件2旧				test file1 -ot file2  && echo true || echo false
											[ file1 -ot file2 ] && echo true || echo false
											[[ file1 -ot file2 ]] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  -c file		文件存在并且是字符设备文件		test -c file  && echo true || echo false
											[ -c file ] && echo true || echo false
											[[ -c file ]] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  -d file		文件存在并且是目录			test -d file  && echo true || echo false
											[ -d file ] && echo true || echo false
											[[ -d file ]] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  -e file		文件存在						test -e file  && echo true || echo false
											[ -e file ] && echo true || echo false
											[[ -e file ]] && echo true || echo false
 -------------------------------------------------------------------------------------------------
 -f file		文件存在并且是正规文件			test -f file && echo true || echo false	
											[[ -f file ]] && echo true
											[ -f file ] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  -g file		文件存在并且是设置了组ID		test -g file  && echo true || echo false
											[ -g file ] && echo true || echo false
											[[ -g file ]] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  -G file		文件存在并且属于有效组ID		test -G file  && echo true || echo false
											[ -G file ] && echo true || echo false
											[[ -G file ]] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  -h file		文件存在并且是一个符号链接		test -h file  && echo true || echo false
											[ -h file ] && echo true || echo false
											[[ -h file ]] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  -k file		文件存在并且设置了sticky位		test -k file  && echo true || echo false
											[ -k file ] && echo true || echo false
											[[ -k file ]] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  -b file		文件存在并且是块设备文件		test -b file  && echo true || echo false
											[ -b file ] && echo true || echo false
											[[ -b file ]] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  -L file		文件存在并且是一个			test -L file  && echo true || echo false
				符号链接（同-h）				[ -L file ] && echo true || echo false
											[[ -L file ]] && echo true || echo false
				
 -------------------------------------------------------------------------------------------------
  -o file		文件存在并且属于有效用户ID		test -o file  && echo true || echo false
											[ -o file ] && echo true || echo false
											[[ -o file ]] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  -p file		文件存在并且是一个命名管道		test -p file  && echo true || echo false
											[ -p file ] && echo true || echo false
											[[ -p file ]] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  -r file		文件存在并且可读				test -r file  && echo true || echo false
											[ -r file ] && echo true || echo false
											[[ -r file ]] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  -w file		文件存在并且可写				test -w file  && echo true || echo false
											[ -w file ] && echo true || echo false
											[[ -w file ]] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  -x file		文件存在并且可执行			test -x file  && echo true || echo false
											[ -x file ] && echo true || echo false
											[[ -x file ]] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  -s file		文件存在并且是一个套接字		test -s file  && echo true || echo false
											[ -s file ] && echo true || echo false
											[[ -s file ]] && echo true || echo false
 -------------------------------------------------------------------------------------------------
  -t file		文件描述符是在一个			test -t file  && echo true || echo false
				终端打开的					[ -t file ] && echo true || echo false
											[[ -t file ]] && echo true || echo false
				
 -------------------------------------------------------------------------------------------------
  -u file		文件存在并且设置了它的			test -u file  && echo true || echo false
				set-user-id位				[ -u file ] && echo true || echo false
											[[ -u file ]] && echo true || echo false
				
 -------------------------------------------------------------------------------------------------
eof





















